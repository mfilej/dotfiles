"$schema" = 'https://starship.rs/config-schema.json'

format = """
$line_break\
$sudo\
$directory\
$custom\
$character"""

right_format = """
$env_var\
$git_commit\
$git_state\
$git_metrics\
$jobs$status\
$cmd_duration\
"""

add_newline = true

[profiles]
transient_prompt = """$fill$line_break$character"""

[character] # The name of the module we are configuring is 'character'
success_symbol = '[\$](cyan)'
error_symbol = '[\$](red)'
vimcmd_symbol = '[i \$](cyan)'
vimcmd_replace_one_symbol = '[r \$](purple)'
vimcmd_replace_symbol = '[R \$](purple)'
vimcmd_visual_symbol = '[v \$](purple)'

[fill]
symbol = '-'
style = 'bold fg:#3b4261'

[cmd_duration]
min_time = 0
show_milliseconds = true
# show_notifications = true
format = '[⏲ $duration](dimmed white) '

[directory]
truncate_to_repo = false
truncation_length = 255
style = 'fg:#7aa2f7 bg:#3b4261'
repo_root_style = 'bold fg:#2cc3de bg:#3b4261'
read_only = '  '                              # Nerd Fonts nf-fa-lock \uf023
read_only_style = 'yellow'

[git_branch]
style = 'purple'
format = '[$symbol$branch(:$remote_branch)]($style) '
symbol = ''

[git_commit]
only_detached = false
tag_disabled = false
tag_symbol = '  '
format = '[$hash$tag]($style) '
style = 'dimmed purple'

[git_state]

[git_metrics]
disabled = false
added_style = 'dimmed green'
deleted_style = 'dimmed red'

[git_status]
untracked = '✦'
stashed = 'ß'
modified = 'δ'
staged = '±'
renamed = '↬'
deleted = '×'
format = '([$all_status$ahead_behind]($style) )'
style = 'cyan'

[status]
disabled = false
symbol = '↵'
style = 'inverted bold red'

[env_var.AWS_SSO_PROFILE]
description = "Current aws-sso profile"
format = '[$env_value]($style) '
style = 'blue'

[custom.jj]
ignore_timeout = true
description = "current jj status"
symbol = ""
when = ''' test "$HOME" != "$PWD" '''
command = '''
jj root > /dev/null && jj log --revisions @ --no-graph --ignore-working-copy --color always --limit 1 --template '
  separate(" ",
    "ȷȷ",
    change_id.shortest(4),
    bookmarks,
    concat(
      if(conflict, "💥"),
      if(divergent, "🚧"),
      if(hidden, "👻"),
      if(immutable, "🔒"),
    ),
    raw_escape_sequence("\x1b[1;32m") ++ if(empty, "(empty)"),
    raw_escape_sequence("\x1b[1;32m") ++ if(description.first_line().len() == 0,
      "(no description set)",
      if(description.first_line().substr(0, 29) == description.first_line(),
        description.first_line(),
        description.first_line().substr(0, 29) ++ "…",
      )
    ) ++ raw_escape_sequence("\x1b[0m"),
  )
'
'''
