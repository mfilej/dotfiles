complete -c rspec -s I -r -d "Specify PATH to add to \$LOAD_PATH"
complete -c rspec -s r -l require -r -d "Require a file"
complete -c rspec -s O -l options -r -d "Specify the path to a custom options file"
complete -c rspec -l order -x -a "defined random recently-modified" -d "Run examples by the specified order type"
complete -c rspec -l seed -x -d "Equivalent of --order rand:SEED"
complete -c rspec -l bisect -f -a "verbose" -d "Repeatedly runs the suite in order to isolate the failures to the smallest reproducible case"
complete -c rspec -l fail-fast -d "Abort the run after a certain number of failures (1 by default)"
complete -c rspec -l no-fail-fast -d "See --fail-fast"
complete -c rspec -l failure-exit-code -x -d "Override the exit code used when there are failing specs"
complete -c rspec -l error-exit-code  -x -d "Override the exit code used when there are errors loading or running specs outside of examples"
complete -c rspec -s X -l drb -d "Run examples via DRb"
complete -c rspec -l drb -d "See --drb"
complete -c rspec -l drb-port -x -d "Port to connect to the DRb server"
complete -c rspec -s f -l format -x -a "progress documentation html json failures" -d "Choose a formatter"
complete -c rspec -s o -l out -r -d "Write output to a file instead of \$stdout."
complete -c rspec -l deprecation-out -r -d "Write deprecation warnings to a file instead of \$stderr"
complete -c rspec -s b -l backtrace -d "Enable full backtrace"
complete -c rspec -l force-color -d "Force the output to be in color, even if the output is not a TTY"
complete -c rspec -l force-colour -d "Force the output to be in color, even if the output is not a TTY"
complete -c rspec -l no-color -d "Force the output to not be in color, even if the output is a TTY"
complete -c rspec -l no-colour -d "Force the output to not be in color, even if the output is a TTY"
complete -c rspec -s p -l profile -d "Enable profiling of examples and list the slowest examples (default: 10)"
complete -c rspec -l no-profile -d "See --profile"
complete -c rspec -l dry-run -d "Print the formatter output of your suite without running any examples or hooks"
complete -c rspec -s w -l warnings -d "Enable Ruby warnings"
complete -c rspec -l only-failures -d "Filter to just the examples that failed the last time they ran"
complete -c rspec -s n -l next-failure -d "Apply --only-failures and abort after one failure"
complete -c rspec -s P -l pattern -r -d "Load files matching pattern"
complete -c rspec -l exclude-pattern -r -d "Load files except those matching pattern. Opposite effect of --pattern."
complete -c rspec -s e -l example -x -d "Run examples whose full nested names include STRING"
complete -c rspec -s E -l example-matches -x -d "Run examples whose full nested names match REGEX"
complete -c rspec -s t -l tag -x -d "Run examples with the specified tag, or exclude examples by adding ~ before the tag."
complete -c rspec -l default-path -r -d "Set the default path where RSpec looks for examples"
complete -c rspec -l init -d "Initialize your project with RSpec"
complete -c rspec -s v -l version -d "Display the version."
complete -c rspec -s h -l help -d "Show help"
